From ee6c5e7281b6c8578fc5a7e4fc928d55c022d4ca Mon Sep 17 00:00:00 2001
From: Tobias Grosser <tobias@grosser.es>
Date: Tue, 26 Mar 2013 14:38:10 +0100
Subject: [PATCH 1/3] Make return type of evaluateSamples void

evaluateSamples returns its result through a matrix that is given as a
parameter. As it does not return anything through its return type,
we declare the return type void. This fixes compilation with clang.
---
 mlp_impl.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/mlp_impl.c b/mlp_impl.c
index 9869b2a..0a4211a 100644
--- a/mlp_impl.c
+++ b/mlp_impl.c
@@ -41,7 +41,7 @@ void     SetValueFloat( MatFloat self, int row, int col, float value );
 void     update( int mapSize, MatFloat m_wIn, MatFloat m_U, MatFloat m_wOut, int m_patchSize,  /* results */ int * m_patch_line_size, int * m_number_of_patches_per_line, MatFloat * m_wIn_gemm, MatFloat * m_all_bIns, MatFloat * m_all_bOuts, MatFloat * m_all_patches, MatFloat * m_wOut_gemm  );
 void     generateResponseMap( const MatChar image, const Point2i center, int mapSize, mlp classifier, MatFloat * result  );
 int      cvRound( float value );
-MatFloat evaluateSamples( MatFloat m_wIn_gemm, MatFloat m_all_patches, MatFloat m_all_bIns, MatFloat m_wOut_gemm, MatFloat m_all_bOuts, /* result */ MatFloat * result );
+void evaluateSamples( MatFloat m_wIn_gemm, MatFloat m_all_patches, MatFloat m_all_bIns, MatFloat m_wOut_gemm, MatFloat m_all_bOuts, /* result */ MatFloat * result );
 
 
 void freeMLP( mlp * classifier )
@@ -395,7 +395,7 @@ subtractFloat( MatFloat input, float val, MatFloat * output )
     return;
 }
 
-MatFloat
+void
 evaluateSamples( 
     MatFloat m_wIn_gemm, 
     MatFloat m_all_patches,
-- 
1.7.10.4
